#+title: Emacs Configuration
#+PROPERTY: header-args:emacs-lisp :tangle config.el :comments link
* Introduction
This org file contains the literate Doom Emacs configuration. All code
blocks tangle to config.el for use by Doom.
* Setup
** Basic Setup
#+begin_src emacs-lisp 
(setq user-full-name    "Zhang Qingbo"
      user-mail-address "ripple0328@gmail.com"
      auth-sources '("~/.authinfo.gpg")
      major-mode 'org-mode
)

#+end_src
** Dashboard
The Doom dashboard is customized with a splash image and no shortmenu.
#+begin_src emacs-lisp 
(remove-hook '+doom-dashboard-functions #'doom-dashboard-widget-shortmenu)
(add-hook! '+doom-dashboard-functions :append
(setq-hook! '+doom-dashboard-mode-hook evil-normal-state-cursor (list nil))
(setq fancy-splash-image (concat doom-user-dir "butterfly.svg")))
(setq initial-frame-alist '((top . 1) (left . 120) (width . 143) (height . 55)))
#+end_src

** Visual
Theme and font settings for a consistent look across systems.
#+begin_src emacs-lisp 
(setq doom-theme 'modus-vivendi
doom-font (font-spec :family "Iosevka Term SS04" :size 32 :weight 'light)
doom-variable-pitch-font (font-spec :family "Iosevka Term SS04" :size 32)
)
(if (eq system-type 'darwin)
 (setq
   doom-font (font-spec :family "Iosevka Term SS04" :size 16 :weight 'light)
   doom-variable-pitch-font (font-spec :family "Iosevka Term SS04" :size 16)))
(setq-default line-spacing 0.24)
#+end_src
** Core Behaviors
General editor behaviour tweaks.
#+begin_src emacs-lisp 
(setq scroll-margin 2
      auto-save-default t
      display-line-numbers-type nil
      auth-source-cache-expiry nil
      starttls-use-gnutls t
      mac-right-option-modifier 'meta
      global-subword-mode t ; Iterate through CamelCase words
      delete-by-moving-to-trash t                      ; Delete files to trash
      window-combination-resize t                      ; take new window space from all other windows (not just current)
      x-stretch-cursor t
      avy-all-windows t
      good-scroll-mode t
      evil-escape-key-sequence "fd"
      gnutls-verify-error nil
      truncate-string-ellipsis "…"
      browse-url-browser-function 'xwidget-webkit-browse-url)
#+end_src

** Web Development
Minor helpers for JS and TS workflows.
#+begin_src emacs-lisp 
(use-package jest-test-mode
  :ensure t
  :commands jest-test-mode
  :hook (typescript-tsx-mode js-mode typescript-mode))
#+end_src
** Email
Configuration for mu4e and Gmail.
#+begin_src emacs-lisp 
(after! mu4e
  (setq mu4e-index-cleanup nil
        mu4e-index-lazy-check t
        mu4e-update-internal 300
        smtpmail-starttls-credentials '(("smtp.gmail.com" 587 nil nil))
        message-send-mail-function 'smtpmail-send-it
        mu4e-maildir-shortcuts '((
                                :maildir "/inbox" :key ?i))
        smtpmail-auth-credentials '(("smtp.gmail.com" 587 "ripple0328@gmail.com" nil))
        smtpmail-default-smtp-server "smtp.gmail.com"
        smtpmail-smtp-server "smtp.gmail.com"
        smtpmail-smtp-service 587)

(set-email-account! "Gmail"
  '((mu4e-sent-folder       . "/Gmail/Sent Mail")
    (mu4e-drafts-folder     . "/Gmail/Drafts")
    (mu4e-trash-folder      . "/Gmail/Trash")
    (mu4e-refile-folder     . "/Gmail/All Mail")
    (smtpmail-smtp-user     . "ripple0328@gmail.com")
    (mu4e-get-mail-command  . "mbsync --all")
    (user-mail-address      . "ripple0328@gmail.com")    ;; only needed for mu < 1.4
    (mu4e-compose-signature . "---\n Qingbo Zhang"))
  )
)
#+end_src
** Org Mode
Productivity features for Org.
#+begin_src emacs-lisp 
 (after! org
   (map! :map org-mode-map
         :n "M-j" #'org-metadown
         :n "M-k" #'org-metaup)
   (setq org-directory "~/Documents/notes/"
         org-agenda-files (directory-files-recursively "~/Documents/notes/" "\\.org$")
         org-log-done 'time
         org-agenda-start-with-log-mode t
         org-log-into-drawer t
         org-tags-column -80
         org-ellipsis "⚡⚡⚡"
         org-todo-keywords '((sequence "TODO(t)" "INPROGRESS(i)" "WAITING(w)" "|" "DONE(d)" "CANCELLED(c)"))
         org-todo-keyword-faces
         '(
            ("TODO" :foreground "#7c7c75" :weight normal :underline t)
            ("WAITING" :foreground "#9f7efe" :weight normal :underline t)
            ("INPROGRESS" :foreground "#0098dd" :weight normal :underline t)
            ("DONE" :foreground "#50a14f" :weight normal :underline t)
            ("CANCELLED" :foreground "#ff6480" :weight normal :underline t)
            )
       ))

#+end_src

* Navigation
Tools to move around projects.
** Treemacs
File tree viewer.
#+begin_src emacs-lisp 
(setq treemacs-follow-mode t)
#+end_src
** Dirvish
Modern dired replacement.
#+begin_src emacs-lisp
(use-package! dirvish)
#+end_src

** Keybindings
Custom leader mappings.
#+begin_src emacs-lisp 
(map! :leader
      :desc "other window"
      "w o" #'other-window)

#+end_src

