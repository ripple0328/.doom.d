name: Doom Emacs CI

on:
  push:
    paths:
      - '**/*.el'
      - '**/*.org'
      - '.github/workflows/**'
      - '.dagger/**'
      - 'package*.json'
      - 'tsconfig.json'
  pull_request:
    paths:
      - '**/*.el'
      - '**/*.org'
      - '.github/workflows/**'
      - '.dagger/**'
      - 'package*.json'
      - 'tsconfig.json'

#######################################################################
#  Doom Emacs CI
#  -------------
#  This workflow validates the configuration in three flavours:
#    1.  **lint**        – static `checkdoc` only              (fast)
#    2.  **skip-deps**   – full pipeline but reuse host Emacs  (medium)
#    3.  **full**        – build Emacs 30.1 from source        (slow)
#
#  The `full` variant is expensive, so it only runs on:
#    • pushes to the main branch
#    • *any* pull-request (to protect the default branch)
#######################################################################

jobs:
  doom-tests:
    name: "Doom Emacs • ${{ matrix.test_type }}"
    runs-on: ubuntu-latest
    timeout-minutes: 45

    # Drive three variations via a build matrix
    strategy:
      matrix:
        include:
          - test_type: lint
            env_flags: "LINT_ONLY=true"
          - test_type: skip-deps
            env_flags: "SKIP_DEPS=true"
          - test_type: full
            env_flags: ""        # full pipeline, no extra flags
      fail-fast: false

    steps:
      #-------------------------------------------------------------
      # Checkout repo
      #-------------------------------------------------------------
      - name: Checkout Doom config
        uses: actions/checkout@v4

      #-------------------------------------------------------------
      # Node (for Dagger TypeScript SDK)
      #-------------------------------------------------------------
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      #-------------------------------------------------------------
      # Install JS deps (dagger, tsx, etc.)
      #-------------------------------------------------------------
      - name: Install dependencies
        run: npm ci

      #-------------------------------------------------------------
      # Validate Dagger configuration
      #-------------------------------------------------------------
      - name: Validate Dagger config
        run: npx tsc --noEmit .dagger/config.ts

      #-------------------------------------------------------------
      # Run the requested pipeline flavour
      #-------------------------------------------------------------
      - name: Run Dagger pipeline – ${{ matrix.test_type }}
        if: ${{ matrix.test_type != 'full' || github.ref == 'refs/heads/main' || github.event_name == 'pull_request' }}
        env:
          # Propagate flags into the script (may be empty string)
          FLAGS: ${{ matrix.env_flags }}
        run: |
          echo "▶︎ running pipeline with flags: $FLAGS"
          eval "$FLAGS npm run pipeline"
